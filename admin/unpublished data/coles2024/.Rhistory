# set up packages
library(tidyverse)
library(qualtRics)
qualtrics_api_credentials(
api_key = 'urh7PtWEEOkAzrbjmYQC2FoipCvCT4n8ZIByL5rH',
base_url = 'iad1.qualtrics.com',
install = TRUE,
overwrite = TRUE)
readRenviron("~/.Renviron")
DF <- fetch_survey(surveyID = 'SV_1YQ3FmlbEHp1RIO',
force_request = T,
label = F,
convert = F)
# Dangs API credential at UCSD
qualtrics_api_credentials(
api_key = 'urh7PtWEEOkAzrbjmYQC2FoipCvCT4n8ZIByL5rH',
base_url = 'iad1.qualtrics.com',
install = TRUE,
overwrite = TRUE)
readRenviron("~/.Renviron")
# open data
DF <- fetch_survey(surveyID = 'SV_1YQ3FmlbEHp1RIO',
force_request = T,
label = F,
convert = F)
# process data
DF <- DF %>%
# remove incomplete or test observations
filter(DistributionChannel != "preview",
Progress > 95,
!is.na(stim_lef_sma_mkn)) %>%
# select relevant variables
select(
# subject data
ResponseId, sex, age, attention_check,
# lab data
lab, modality, incentive,
# task data
orientation, info,
stim_lef_sma_mkn : prq_w_2) %>%
# identify conditions
pivot_longer(cols = stim_lef_sma_mkn : stim_lef_sma_mky,
names_to = "trial") %>%
rowwise() %>%
mutate(info.pres =
if_else(condition = grepl("mky", trial),
true = "yes",
false = "no"),
just =
if_else(condition = grepl("lef", trial),
true = "left",
false = "right")) %>%
ungroup() %>%
# fix variable classes
mutate_at(vars(info.pres, just),
as.factor)
get.wd()
getwd()
write.csv(DF, "coles2024b.csv")
DF <- read.csv("coles2024b.csv")
DF$info
DF$info %>% UNIQUE
DF$info %>% unique
library(tidyverse)
DF$info %>% unique
DF$value
DF$value %>% View()
View(DF)
# Chunk 1
# set up packages
library(tidyverse)
library(qualtRics)
# Dangs API credential at UCSD
qualtrics_api_credentials(
api_key = 'urh7PtWEEOkAzrbjmYQC2FoipCvCT4n8ZIByL5rH',
base_url = 'iad1.qualtrics.com',
install = TRUE,
overwrite = TRUE)
readRenviron("~/.Renviron")
# open data
DF <- fetch_survey(surveyID = 'SV_1YQ3FmlbEHp1RIO',
force_request = T,
label = F,
convert = F)
# process data
DF <- DF %>%
# remove incomplete or test observations
filter(DistributionChannel != "preview",
Progress > 95,
!is.na(stim_lef_sma_mkn)) %>%
# select relevant variables
select(
# subject data
ResponseId, sex, age, attention_check,
# lab data
lab, modality, incentive,
# task data
orientation, info,
stim_lef_sma_mkn : prq_w_2) %>%
# identify conditions
pivot_longer(cols = stim_lef_sma_mkn : stim_lef_sma_mky,
names_to = "trial") %>%
rowwise() %>%
mutate(info.pres =
if_else(condition = grepl("mky", trial),
true = "yes",
false = "no"),
just =
if_else(condition = grepl("lef", trial),
true = "left",
false = "right")) %>%
ungroup() %>%
# fix variable classes
mutate_at(vars(info.pres, just),
as.factor) %>%
# remove unnecessary rows
filter(!is.na(value)) %>%
# export
write.csv("coles2024b.csv")
# Dangs API credential at UCSD
qualtrics_api_credentials(
api_key = 'urh7PtWEEOkAzrbjmYQC2FoipCvCT4n8ZIByL5rH',
base_url = 'iad1.qualtrics.com',
install = TRUE,
overwrite = TRUE)
readRenviron("~/.Renviron")
# open data
DF <- fetch_survey(surveyID = 'SV_1YQ3FmlbEHp1RIO',
force_request = T,
label = F,
convert = F)
# process data
DF <- DF %>%
# remove incomplete or test observations
filter(DistributionChannel != "preview",
Progress > 95,
!is.na(stim_lef_sma_mkn)) %>%
# select relevant variables
select(
# subject data
ResponseId, sex, age, attention_check,
# lab data
lab, modality, incentive,
# task data
orientation, info,
stim_lef_sma_mkn : prq_w_2) %>%
# identify conditions
pivot_longer(cols = stim_lef_sma_mkn : stim_lef_sma_mky,
names_to = "trial") %>%
rowwise() %>%
mutate(info.pres =
if_else(condition = grepl("mky", trial),
true = "yes",
false = "no"),
just =
if_else(condition = grepl("lef", trial),
true = "left",
false = "right")) %>%
ungroup() %>%
# fix variable classes
mutate_at(vars(info.pres, just),
as.factor) %>%
# remove unnecessary rows
filter(!is.na(value))
# export
DF %>%
write.csv("coles2024b.csv")
tmp <- DF %>% group_by(ResponseId) %>% summarise(n = n())
tmp <- tmp %>% arrange(n)
tmp$n %>% min
tmp$n %>% max
View(tmp)
# Dangs API credential at UCSD
qualtrics_api_credentials(
api_key = 'urh7PtWEEOkAzrbjmYQC2FoipCvCT4n8ZIByL5rH',
base_url = 'iad1.qualtrics.com',
install = TRUE,
overwrite = TRUE)
readRenviron("~/.Renviron")
# open data
DF <- fetch_survey(surveyID = 'SV_1YQ3FmlbEHp1RIO',
force_request = T,
label = F,
convert = F)
# process data
DF <- DF %>%
# remove incomplete or test observations
filter(DistributionChannel != "preview",
Progress > 95,
!is.na(stim_lef_sma_mkn)) %>%
# select relevant variables
select(
# subject data
ResponseId, sex, age, attention_check,
# lab data
lab, modality, incentive,
# task data
orientation, info,
stim_lef_sma_mkn : prq_w_2) %>%
# identify conditions
pivot_longer(cols = stim_lef_sma_mkn : stim_lef_sma_mky,
names_to = "trial") %>%
rowwise() %>%
mutate(info.pres =
if_else(condition = grepl("mky", trial),
true = "yes",
false = "no"),
just =
if_else(condition = grepl("lef", trial),
true = "left",
false = "right")) %>%
ungroup() %>%
# fix variable classes
mutate_at(vars(info.pres, just),
as.factor) %>%
# remove unnecessary rows
filter(!is.na(value)) %>%
# remove incomplete participant
filter(ResponseId != "R_1oI7B3iN2wVwaaj")
# export
DF %>%
write.csv("coles2024b.csv",
row.names = F)
# set up packages
library(tidyverse)
# open data
DF <- read.csv("coles2024b.csv")
DF %>% names
DF$info
DF$info %>% unique
DF %>% names
DF %>%
group_by(lab, info.pres) %>%
summarise(m.rating = mean(value),
sd.rating = sd(value),
n = ResponseId %>%
unique %>%
length)
# set up packages
library(tidyverse)
# open data
DF <- read.csv("coles2024b.csv")
# calculate summary statistics
DF %>%
group_by(lab, info.pres) %>%
summarise(m.rating = mean(value),
sd.rating = sd(value),
n = ResponseId %>%
unique %>%
length) %>%
write.csv("coles2024b.MSD.csv",
row.names = F)
# set up packages
library(tidyverse)
# open data
DF <- read.csv("coles2024.csv")
DF %>% names
# set up packages
library(tidyverse)
# open data
DF <- read.csv("coles2024.csv")
# calculate summary statistics
DF %>%
group_by(lab, info.pres) %>%
summarise(m.rating = mean(value),
sd.rating = sd(value),
n = ResponseId %>%
unique %>%
length,
lab = unique(lab),
modality = unique(modality),
incentive = unique(incentive)) %>%
write.csv("coles2024.MSD.csv",
row.names = F)
# calculate summary statistics
DF %>%
group_by(lab, info.pres) %>%
summarise(m.rating = mean(value) %>%
round(2),
sd.rating = sd(value) %>% ,
n = ResponseId %>%
unique %>%
length,
lab = unique(lab),
modality = unique(modality),
incentive = unique(incentive)) %>%
write.csv("coles2024.MSD.csv",
row.names = F)
# set up packages
library(tidyverse)
# open data
DF <- read.csv("coles2024.csv")
# calculate summary statistics
DF %>%
group_by(lab, info.pres) %>%
summarise(m.rating = mean(value) %>%
round(2),
sd.rating = sd(value) %>%
round(2),
n = ResponseId %>%
unique %>%
length,
lab = unique(lab),
modality = unique(modality),
incentive = unique(incentive)) %>%
write.csv("coles2024.MSD.csv",
row.names = F)
# set up packages
library(tidyverse)
# open data
DF <- read.csv("coles2024.csv")
# calculate summary statistics
DF %>%
group_by(lab, info.pres) %>%
summarise(m.rating = mean(value) %>%
round(2),
sd.rating = sd(value) %>%
round(2),
n = ResponseId %>%
unique %>%
length,
lab = unique(lab),
modality = unique(modality),
incentive = unique(incentive)) %>%
write.csv("coles2024.MSD.csv",
row.names = F)
