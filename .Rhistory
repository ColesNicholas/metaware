cbind(
`Moderator (bolded) and level` = "     yes",
s = DF.es %>%
filter(paid == "yes") %>%
reframe(n.study = unique(id.study)) %>%
nrow(),
k = DF.es %>%
filter(paid == 'yes') %>%
nrow(),
g =  mod.r$paid$sub$b[[2]] %>% round(2),
`95% CI` =
paste0(
"[",
mod.r$paid$sub$ci.lb[[2]] %>% round(2),
", ",
mod.r$paid$sub$ci.ub[[2]] %>% round(2),
"]"
),
`F` = mod.r$paid$sub$zval[[2]] ^ 2 %>%
round(2),
p = mod.r$paid$sub$pval[[2]] %>% as.numeric %>% apa_p()
),
# no
cbind(
`Moderator (bolded) and level` = "     no",
s = DF.es %>%
filter(paid == "no") %>%
reframe(n.study = unique(id.study)) %>%
nrow(),
k =  DF.es %>%
filter(paid == 'no') %>%
nrow(),
g =  mod.r$paid$sub$b[[1]] %>% round(2),
`95% CI` =
paste0(
"[",
mod.r$paid$sub$ci.lb[[1]] %>% round(2),
", ",
mod.r$paid$sub$ci.ub[[1]] %>% round(2),
"]"
),
`F` = mod.r$paid$sub$zval[[1]] ^ 2 %>%
round(2),
p = mod.r$paid$sub$pval[[1]] %>% as.numeric %>% apa_p()
),
################
# Publication status
################
cbind(
`Moderator (bolded) and level` = "Publication status",
s = mod.r$published$mod$n,
k = mod.r$published$mod$k,
g =  "--",
`95% CI` = "--",
`F` = mod.r$published$mod$QM %>% round(2),
p = mod.r$published$mod$QMp %>% as.numeric %>% apa_p()
),
## published
cbind(
`Moderator (bolded) and level` = "     published",
s = DF.es %>%
filter(published == 'yes') %>%
reframe(n.study = unique(id.study)) %>%
nrow(),
k = DF.es %>%
filter(published == 'yes') %>%
nrow(),
g =  mod.r$published$sub$b[[2]] %>% round(2),
`95% CI` =
paste0(
"[",
mod.r$published$sub$ci.lb[[2]] %>% round(2),
", ",
mod.r$published$sub$ci.ub[[2]] %>% round(2),
"]"
),
`F` = mod.r$published$sub$zval[[2]] ^ 2 %>%
round(2),
p = mod.r$published$sub$pval[[2]] %>% as.numeric %>% apa_p()
),
## unpublished
cbind(
`Moderator (bolded) and level` = "     unpublished",
s = DF.es %>%
filter(published == 'no') %>%
reframe(n.study = unique(id.study)) %>%
nrow(),
k = DF.es %>%
filter(published == 'no') %>%
nrow(),
g =  mod.r$published$sub$b[[1]] %>% round(2),
`95% CI` =
paste0(
"[",
mod.r$published$sub$ci.lb[[1]] %>% round(2),
", ",
mod.r$published$sub$ci.ub[[1]] %>% round(2),
"]"
),
`F` = mod.r$published$sub$zval[[1]] ^ 2 %>%
round(2),
p = mod.r$published$sub$pval[[1]] %>% as.numeric %>% apa_p()
)
) %>%
apa_table(caption = "Moderator and subgroup analyses",
note = "s = number of studies; k = number of effect size estimates; g = Hedge's g; 95% CI corresponds to the estimated value of Hedge's g; F-values represent the test of moderation in bolded rows -- and tests of the model-dervied overall effect size in non-bolded rows; The number of studies listed for a moderator analysis is not necessarily the sum of the number of studies listed for the individual levels of the moderators because many studies yielded effect sizes for multiple levels.")
rm(list = ls())
# Chunk 1: setup
# load writing and data processing packages
library("papaja")
library("tidyverse")
library("readxl")
library("cowplot")
# load meta-analyses packages
library("metafor")
library("weightr")
library("PublicationBias")
# load mixed-effect regression packages
library("lme4")
library("lmerTest")
library("emmeans")
# identify paper references
r_refs("r-references.bib")
# turn scientific notation off
options(scipen = 999)
# set seed to year of lead author's favorite [unfinished] album, SMiLE
set.seed(1967)
# set theme
theme_set(theme_classic())
# Chunk 3: literature search
# open and process literature search data
DF.s <-
# open data
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "records.screening") %>%
# identify
# unpublished dissertations by identifying links that contain the word 'dissertation' AND
# records identified manually by identify links that contain 'NA'
mutate(unpub =
if_else(condition = grepl("dissertation", link) |
link == "NA",
true = 1,
false = 0)
)
# calculate number of records from PsycInfo by removing all records with no known database (i.e., ones that were personally found)
r.pub <- DF.s %>%
filter(unpub == 0) %>%
nrow()
# calculate number of unpublished records (i.e., dissertations)
r.unp <- DF.s %>%
filter(unpub == 1) %>%
nrow()
# Chunk 4: final.df
# open clean effect size data
DF.es <-
read_csv(file = "data/metaware_meta_clean.csv")
# identify total number of studies (denoted by id.study column)
num.s <- DF.es$id.study %>%
unique() %>%
length()
# identify total number of papers (denoted by name column)
num.p <- DF.es$name %>%
unique() %>%
length()
# for the known outlier (id = 18), give an example of the largest effect size
outlier.es <- DF.es %>%
filter(id.study == 18) %>%
summarise(max.es = min(es)) %>% #  using min because largest value is neg
round(2)
# Chunk 5: clean.env.1
# remove outlier and re-initialize id factors
DF.es <- DF.es %>%
filter(id.study != 18) %>%
mutate(id.study = factor(id.study),
id.es = factor(id.es))
# clean environment
rm(DF.s, r.pub, r.unp, num.s, num.p, outlier.es)
# Chunk 6: corr.sens
# examine how assumed repeated measures correlation impacts general pattern of results
# get list of sensitivity dataframes
sens.df.list <- list.files(path = "./data/r_sensitivity")
# (1) open dataframe, (2) compute intercept-only model, (3) extract overall es
sens.res <-
sapply(X = sens.df.list,
FUN = function(i){
# open data
df <- read.csv(paste0("data/r_sensitivity/",
i)
)
# fit model
m <- rma.mv(yi = es,
V = es.var,
data = DF.es,
random = ~ 1 | id.study / id.es)
# return overall es as a number
m$b %>%
as.numeric() %>%
return()
}
)
# compute range of es values
sens.range <- max(sens.res) - min(sens.res)
# delete vestigial
rm(sens.df.list, sens.res)
# Chunk 7: mult.eff
# calculate percentage of studies with multiple effect sizes
mult.eff.per <- DF.es %>%
# identify number of effect sizes for each study (id)
group_by(id.study) %>%
count() %>%
# code whether each study has more than one effect size
mutate(dep = if_else(condition = n > 1,
true = 1,
false = 0)
) %>%
# calculate proportion of studies with more than one effect size
ungroup() %>%
summarise(mult.eff = mean(dep)) %>%
# export as percentage
as.numeric() %>%
round(digits = 2) * 100
# Chunk 8: vig.dem
# identify total number of vignettes
vig.n <- read.csv(file = "admin/vig/metaware_VigCombined.csv") %>%
nrow()
# compile demographic info for the two vignette studies
# import data from first survey
vig.surv1 <-
read_csv(file = "data/metaware_SurvData_raw.csv") %>%
filter(Finished == 1) %>%
select(indiv_gend_var : ethnicity) %>%
mutate(survey = "survey_1")
vig.surv1.n = nrow(vig.surv1)
vig.surv2 <-
read_csv(file = "data/metaware_SurvData2_raw.csv") %>%
filter(Finished == 1) %>%
select(indiv_gend_var : ethnicity) %>%
mutate(survey = "survey_2")
vig.surv <- rbind(vig.surv1, vig.surv2)
rm(vig.surv1, vig.surv2, vig.n)
# describe participant demographics
survey.n <- nrow(vig.surv)
survey.gend <-
vig.surv$indiv_gend_var %>%
table() %>%
prop.table() %>%
round(2) * 100
survey.eth <-
vig.surv$ethnicity %>%
table() %>%
prop.table() %>%
round(2) * 100
survey.age.m <-
mean(vig.surv$indiv_agee_var %>% as.numeric(),
na.rm = T) %>%
round(2)
survey.age.sd <-
sd(vig.surv$indiv_agee_var %>% as.numeric(),
na.rm = T) %>%
round(2)
# put demographics into table
survey.dem = list(n = survey.n,
gend = survey.gend,
ethnicity = survey.eth,
age.m = survey.age.m,
age.sd = survey.age.sd)
# remove vestigial
rm(survey.n, survey.gend,
survey.eth, survey.age.m, survey.age.sd)
# open reliability data
vig1.rel <- readRDS("output/vig.surv1.rel.rds")
vig.n <- read.csv(file = "admin/vig/metaware_VigCombined.csv") %>%
nrow()
# Chunk 1: setup
# load writing and data processing packages
library("papaja")
library("tidyverse")
library("readxl")
library("cowplot")
# load meta-analyses packages
library("metafor")
library("weightr")
library("PublicationBias")
# load mixed-effect regression packages
library("lme4")
library("lmerTest")
library("emmeans")
# identify paper references
r_refs("r-references.bib")
# turn scientific notation off
options(scipen = 999)
# set seed to year of lead author's favorite [unfinished] album, SMiLE
set.seed(1967)
# set theme
theme_set(theme_classic())
# Chunk 3: literature search
# open and process literature search data
DF.s <-
# open data
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "records.screening") %>%
# identify
# unpublished dissertations by identifying links that contain the word 'dissertation' AND
# records identified manually by identify links that contain 'NA'
mutate(unpub =
if_else(condition = grepl("dissertation", link) |
link == "NA",
true = 1,
false = 0)
)
# calculate number of records from PsycInfo by removing all records with no known database (i.e., ones that were personally found)
r.pub <- DF.s %>%
filter(unpub == 0) %>%
nrow()
# calculate number of unpublished records (i.e., dissertations)
r.unp <- DF.s %>%
filter(unpub == 1) %>%
nrow()
# Chunk 4: final.df
# open clean effect size data
DF.es <-
read_csv(file = "data/metaware_meta_clean.csv")
# identify total number of studies (denoted by id.study column)
num.s <- DF.es$id.study %>%
unique() %>%
length()
# identify total number of papers (denoted by name column)
num.p <- DF.es$name %>%
unique() %>%
length()
# for the known outlier (id = 18), give an example of the largest effect size
outlier.es <- DF.es %>%
filter(id.study == 18) %>%
summarise(max.es = min(es)) %>% #  using min because largest value is neg
round(2)
# Chunk 5: clean.env.1
# remove outlier and re-initialize id factors
DF.es <- DF.es %>%
filter(id.study != 18) %>%
mutate(id.study = factor(id.study),
id.es = factor(id.es))
# clean environment
rm(DF.s, r.pub, r.unp, num.s, num.p, outlier.es)
# Chunk 6: corr.sens
# examine how assumed repeated measures correlation impacts general pattern of results
# get list of sensitivity dataframes
sens.df.list <- list.files(path = "./data/r_sensitivity")
# (1) open dataframe, (2) compute intercept-only model, (3) extract overall es
sens.res <-
sapply(X = sens.df.list,
FUN = function(i){
# open data
df <- read.csv(paste0("data/r_sensitivity/",
i)
)
# fit model
m <- rma.mv(yi = es,
V = es.var,
data = DF.es,
random = ~ 1 | id.study / id.es)
# return overall es as a number
m$b %>%
as.numeric() %>%
return()
}
)
# compute range of es values
sens.range <- max(sens.res) - min(sens.res)
# delete vestigial
rm(sens.df.list, sens.res)
# Chunk 7: mult.eff
# calculate percentage of studies with multiple effect sizes
mult.eff.per <- DF.es %>%
# identify number of effect sizes for each study (id)
group_by(id.study) %>%
count() %>%
# code whether each study has more than one effect size
mutate(dep = if_else(condition = n > 1,
true = 1,
false = 0)
) %>%
# calculate proportion of studies with more than one effect size
ungroup() %>%
summarise(mult.eff = mean(dep)) %>%
# export as percentage
as.numeric() %>%
round(digits = 2) * 100
rm(list = ls())
# Chunk 1: setup
# load writing and data processing packages
library("papaja")
library("tidyverse")
library("readxl")
library("cowplot")
# load meta-analyses packages
library("metafor")
library("weightr")
library("PublicationBias")
# load mixed-effect regression packages
library("lme4")
library("lmerTest")
library("emmeans")
# identify paper references
r_refs("r-references.bib")
# turn scientific notation off
options(scipen = 999)
# set seed to year of lead author's favorite [unfinished] album, SMiLE
set.seed(1967)
# set theme
theme_set(theme_classic())
# Chunk 3: literature search
# open and process literature search data
DF.s <-
# open data
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "records.screening") %>%
# identify
# unpublished dissertations by identifying links that contain the word 'dissertation' AND
# records identified manually by identify links that contain 'NA'
mutate(unpub =
if_else(condition = grepl("dissertation", link) |
link == "NA",
true = 1,
false = 0)
)
# calculate number of records from PsycInfo by removing all records with no known database (i.e., ones that were personally found)
r.pub <- DF.s %>%
filter(unpub == 0) %>%
nrow()
# calculate number of unpublished records (i.e., dissertations)
r.unp <- DF.s %>%
filter(unpub == 1) %>%
nrow()
# Chunk 4: final.df
# open clean effect size data
DF.es <-
read_csv(file = "data/metaware_meta_clean.csv")
# identify total number of studies (denoted by id.study column)
num.s <- DF.es$id.study %>%
unique() %>%
length()
# identify total number of papers (denoted by name column)
num.p <- DF.es$name %>%
unique() %>%
length()
# for the known outlier (id = 18), give an example of the largest effect size
outlier.es <- DF.es %>%
filter(id.study == 18) %>%
summarise(max.es = min(es)) %>% #  using min because largest value is neg
round(2)
# Chunk 5: clean.env.1
# remove outlier and re-initialize id factors
DF.es <- DF.es %>%
filter(id.study != 18) %>%
mutate(id.study = factor(id.study),
id.es = factor(id.es))
# clean environment
rm(DF.s, r.pub, r.unp, num.s, num.p, outlier.es)
# Chunk 6: corr.sens
# examine how assumed repeated measures correlation impacts general pattern of results
# get list of sensitivity dataframes
sens.df.list <- list.files(path = "./data/r_sensitivity")
# (1) open dataframe, (2) compute intercept-only model, (3) extract overall es
sens.res <-
sapply(X = sens.df.list,
FUN = function(i){
# open data
df <- read.csv(paste0("data/r_sensitivity/",
i)
)
# fit model
m <- rma.mv(yi = es,
V = es.var,
data = DF.es,
random = ~ 1 | id.study / id.es)
# return overall es as a number
m$b %>%
as.numeric() %>%
return()
}
)
# compute range of es values
sens.range <- max(sens.res) - min(sens.res)
# delete vestigial
rm(sens.df.list, sens.res)
# Chunk 7: mult.eff
# calculate percentage of studies with multiple effect sizes
mult.eff.per <- DF.es %>%
# identify number of effect sizes for each study (id)
group_by(id.study) %>%
count() %>%
# code whether each study has more than one effect size
mutate(dep = if_else(condition = n > 1,
true = 1,
false = 0)
) %>%
# calculate proportion of studies with more than one effect size
ungroup() %>%
summarise(mult.eff = mean(dep)) %>%
# export as percentage
as.numeric() %>%
round(digits = 2) * 100
vig.n <- read.csv(file = "admin/vig/metaware_VigCombined.csv") %>%
nrow()
vig.n
vig.surv1 <-
read_csv(file = "data/metaware_SurvData_raw.csv") %>%
filter(Finished == 1) %>%
select(indiv_gend_var : ethnicity) %>%
mutate(survey = "survey_1")
vig.surv1.n = nrow(vig.surv1)
?apa_table
