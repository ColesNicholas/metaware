ub.95 = m.mot + (1.96 * se.mot)
) %>% View()
DF.surv %>%
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n = n(),
m.mot = mean(mot),
sd.mot = sd(mot),
se.mot = sd.mot / sqrt(n),
lb.95 = m.mot - (1.96 * se.mot),
ub.95 = m.mot + (1.96 * se.mot)
) %>% View()
DF.surv$mot %>% min
DF.surv$mot %>% min(na.rm = T)
DF.surv$max %>% min(na.rm = T)
DF.surv$mot %>% max(na.rm = T)
DF.surv %>%
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n = n(),
m.mot = mean(mot),
sd.mot = sd(mot),
se.mot = sd.mot / sqrt(n),
lb.95 = m.mot - (1.96 * se.mot),
ub.95 = m.mot + (1.96 * se.mot),
imp = 2 * (1.96 * se.mot)
) %>% View()
tmp <- DF.surv %>%
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n = n(),
m.mot = mean(mot),
sd.mot = sd(mot),
se.mot = sd.mot / sqrt(n),
lb.95 = m.mot - (1.96 * se.mot),
ub.95 = m.mot + (1.96 * se.mot),
imp = 2 * (1.96 * se.mot)
)
tmp$imp %>% mean
View(tmp)
lapply(
X = mot,
FUN = function(X){
DF.surv
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n = n(),
sd.mot = sd(mot),
se.mot = sd.mot / sqrt(n),
imp = 2 * (1.96 * se.mot)) %>%
summarise(m.imp = mean(imp)) %>%
return()
}
)
X = "mot"
DF.surv
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n.est = n(),
sd.est = sd(X),
se.est = sd.est / sqrt(n),
imp = 2 * (1.96 * se.est))
DF.surv %>%
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n.est = n(),
sd.est = sd(X),
se.est = sd.est / sqrt(n),
imp = 2 * (1.96 * se.est))
DF.surv %>%
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n.est = n(),
sd.est = sd(X),
se.est = sd.est / sqrt(n.est),
imp = 2 * (1.96 * se.est))
DF.surv %>%
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n.est = n(),
sd.est = sd(!!X),
se.est = sd.est / sqrt(n.est),
imp = 2 * (1.96 * se.est))
DF.surv %>%
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n.est = n(),
sd.est = sd(get(X)),
se.est = sd.est / sqrt(n.est),
imp = 2 * (1.96 * se.est))
DF.surv %>%
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n.est = n(),
sd.est = sd(get(X)),
se.est = sd.est / sqrt(n.est),
imp = 2 * (1.96 * se.est)) %>%
summarise(m.imp = mean(imp))
DF.surv %>% names
DF.surv$dem
?lapply
prec <- sapply(
X = c("mot", "opp", "bel", "pre"),
USE.NAMES = T,
FUN = function(X){
DF.surv %>%
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n.est = n(),
sd.est = sd(get(X)),
se.est = sd.est / sqrt(n.est),
imp = 2 * (1.96 * se.est)) %>%
summarise(m.imp = mean(imp)) %>%
return()
}
)
View(prec)
rm(X)
prec <- sapply(
X = c("mot", "opp", "bel", "pre"),
USE.NAMES = T,
FUN = function(x){
DF.surv %>%
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n.est = n(),
sd.est = sd(get(x)),
se.est = sd.est / sqrt(n.est),
imp = 2 * (1.96 * se.est)) %>%
summarise(m.imp = mean(imp)) %>%
return()
}
)
prec
x = "opp"
DF.surv %>%
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n.est = n(),
sd.est = sd(get(x)),
se.est = sd.est / sqrt(n.est),
imp = 2 * (1.96 * se.est))
DF.surv %>%
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n.est = n(),
sd.est = sd(get(x)),
se.est = sd.est / sqrt(n.est),
imp = 2 * (1.96 * se.est)) %>%
summarise(m.imp = mean(imp))
prec <- sapply(
X = c("mot", "opp", "bel", "pre"),
USE.NAMES = T,
FUN = function(x){
DF.surv %>%
filter(!is.na(get(x)),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n.est = n(),
sd.est = sd(get(x)),
se.est = sd.est / sqrt(n.est),
imp = 2 * (1.96 * se.est)) %>%
summarise(m.imp = mean(imp)) %>%
return()
}
)
prec
install.packages('presize')
library('presize')
?prec.mean
?prec_mean
prec_mean(mean = mean(DF.surv$opp,
na.rm = T),
sd = sd(DF.surv$opp,
na.rm = T),
conf.width = 1)
prec_mean(mean = mean(DF.surv$opp,
na.rm = T),
sd = sd(DF.surv$opp,
na.rm = T),
conf.width = 1)$n
prec <- sapply(
X = c("mot", "opp", "bel", "pre"),
USE.NAMES = T,
FUN = function(x){
# get M and SD
desc <- DF.surv %>%
filter(!is.na(get(x)),
att.chk == 1) %>%
group_by(vig) %>%
summarise(m.est = m(get(x)),
sd.est = sd(get(x))
)
# precision sample planning
prec_mean(mean = desc$m.est,
sd = desc$sd.est,
conf.width = 1)$n %>%
return()
}
)
?mean
prec <- sapply(
X = c("mot", "opp", "bel", "pre"),
USE.NAMES = T,
FUN = function(x){
# get M and SD
desc <- DF.surv %>%
filter(!is.na(get(x)),
att.chk == 1) %>%
group_by(vig) %>%
summarise(m.est = mean(get(x)),
sd.est = sd(get(x))
)
# precision sample planning
prec_mean(mean = desc$m.est,
sd = desc$sd.est,
conf.width = 1)$n %>%
return()
}
)
View(prec)
desc <- DF.surv %>%
filter(!is.na(get(x)),
att.chk == 1) %>%
group_by(vig) %>%
summarise(m.est = mean(get(x)),
sd.est = sd(get(x))
)
prec_mean(mean = desc$m.est,
sd = desc$sd.est,
conf.width = 1)$n
prec_mean(mean = mean(DF.surv$opp,
na.rm = T),
sd = sd(DF.surv$opp,
na.rm = T),
conf.width = 1)$n
desc$m.est
prec <- sapply(
X = c("mot", "opp", "bel", "pre"),
USE.NAMES = T,
FUN = function(x){
# get M and SD
desc <- DF.surv %>%
filter(!is.na(get(x)),
att.chk == 1) %>%
group_by(vig) %>%
summarise(m.est = mean(get(x)),
sd.est = sd(get(x))
)
# precision sample planning
prec_mean(mean = desc$m.est,
sd = desc$sd.est,
conf.width = 1)$n %>%
mean() %>%
return()
}
)
# Chunk 1: setup and load packages
# load libraries
library("tidyverse")
library("readxl")
library("performance")
library("lme4")
DF.surv <- read_csv(file = "data/metaware_SurvData_raw.csv") %>%
# remove unnecessary variables
select(-c(StartDate : UserLanguage),
-c(hap1_bl1_hap : survey_order),
-contains("Click"),
-contains("Submit"),
-contains("Count")) %>%
# remove row containing ImportId
filter(!grepl("ImportId", `1_awr`)) %>%
# assign participant ids
mutate(ss = 1 : nrow(.),
ss = as.character(ss)) %>%
# select columns containing information from the vignettes
select(`1_awr` : `119_opp`, ss) %>%
# extract vignette identifier from the first row of data
# note: I warned you the data structure is awkward
mutate_all(~if_else(condition = grepl("#", .),
true = substr(x = .,
start = 2,
stop = 9),
false = .))
# append first row (containing vignette identifiers) to the column name
## append name
colnames(DF.surv) <- paste(sep = "##",
colnames(DF.surv),
as.character(unlist(DF.surv[1, ]))
)
## remove the first row
### now that the vignette identifier has been added to the column name, we don't need this row anymore
DF.surv <- DF.surv[-1, ]
## fix ss (subject identifier) variable naming
DF.surv <- DF.surv %>%
rename("ss" = "ss##1")
# pivot data so that there is one row for each participants' rating of each vignette
DF.surv <- DF.surv %>%
# pivot longer
pivot_longer(cols = contains("##"),
names_to = c("var", "vig"),
names_sep = "##") %>%
# extract variable name
mutate(var = substr(x = var,
start = nchar(var) - 2,
stop = nchar(var))) %>%
# pivot wider
pivot_wider(names_from = var,
values_from = value) %>%
# convert columns to correct class
mutate_at(c("awr", "mot", "opp", "bel", "pre"),
as.numeric)
DF.surv <- DF.surv %>%
# identify whether the researcher hypothesis was pos, neg, or nil
mutate(dem = substr(x = vig,
start = 4,
stop = 4))
## set att.chk to 0 (failed attention check) by default
DF.surv$att.chk = 0
## set att.chk to 1 when hypothesis is correctly identified
### positive hypothesis (dem == p)
DF.surv[DF.surv$dem == "p" &
!is.na(DF.surv$awr) &
DF.surv$awr == 1, ]$att.chk = 1
### negative hypothesis (dem == n)
DF.surv[DF.surv$dem == "n" &
!is.na(DF.surv$awr) &
DF.surv$awr == 2, ]$att.chk = 1
### nil hypothesis (dem == z)
DF.surv[DF.surv$dem == "z" &
!is.na(DF.surv$awr) &
DF.surv$awr == 3, ]$att.chk = 1
## if participants did not respond to the attention check item, set the att.chk variable to NA
DF.surv[is.na(DF.surv$awr), ]$att.chk = NA
## manually fix 28_p_dis vignette attention check
## there were some oddities in how we created this vignette--but the correct hypothesis would be 2 (not 1)
DF.surv[DF.surv$vig == "28_p_dis" &
!is.na(DF.surv$awr) &
DF.surv$awr == 2, ]$att.chk = 1
DF.surv$ss %>% unique %>% length
DF.surv$vig %>% unique %>% length
prec <- sapply(
X = c("mot", "opp", "bel", "pre"),
USE.NAMES = T,
FUN = function(x){
DF.surv %>%
filter(!is.na(get(x)),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n.est = n(),
sd.est = sd(get(x)),
se.est = sd.est / sqrt(n.est),
imp = 2 * (1.96 * se.est)) %>%
summarise(m.imp = mean(imp)) %>%
return()
}
)
prec
mean(prec)
bind_rows(prec)
bind_cols(prec)
bind_cols(prec) %>% View()
bind_rows(prec) %>% rowMeans()
prec <- sapply(
X = c("mot", "opp", "bel", "pre"),
USE.NAMES = T,
FUN = function(x){
# get M and SD
desc <- DF.surv %>%
filter(!is.na(get(x)),
att.chk == 1) %>%
group_by(vig) %>%
summarise(m.est = mean(get(x)),
sd.est = sd(get(x))
)
# precision sample planning
prec_mean(mean = desc$m.est,
sd = desc$sd.est,
conf.width = 1)$n %>%
mean() %>%
return()
}
)
x = 'opp'
DF.surv %>%
filter(!is.na(get(x)),
att.chk == 1)
DF.surv %>%
filter(!is.na(get(x)),
att.chk == 1) %>%
group_by(vig) %>%
summarise(m.est = mean(get(x)),
sd.est = sd(get(x))
)
desc <- DF.surv %>%
filter(!is.na(get(x)),
att.chk == 1) %>%
group_by(vig) %>%
summarise(m.est = mean(get(x)),
sd.est = sd(get(x))
)
desc$m.est
desc$sd.est
prec_mean(mean = desc$m.est,
sd = desc$sd.est,
conf.width = 1)$n
library("presize")
rm(x
)
prec <- sapply(
X = c("mot", "opp", "bel", "pre"),
USE.NAMES = T,
FUN = function(x){
# get M and SD
desc <- DF.surv %>%
filter(!is.na(get(x)),
att.chk == 1) %>%
group_by(vig) %>%
summarise(m.est = mean(get(x)),
sd.est = sd(get(x))
)
# precision sample planning
prec_mean(mean = desc$m.est,
sd = desc$sd.est,
conf.width = 1)$n %>%
mean() %>%
return()
}
)
prec
prec <- sapply(
X = c("mot", "opp", "bel", "pre"),
USE.NAMES = T,
FUN = function(x){
DF.surv %>%
filter(!is.na(get(x)),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n.est = n(),
sd.est = sd(get(x)),
se.est = sd.est / sqrt(n.est),
imp = 2 * (1.96 * se.est)) %>%
summarise(m.imp = mean(imp)) %>%
return()
}
)
prec
prec <- sapply(
X = c("mot", "opp", "bel", "pre"),
USE.NAMES = T,
FUN = function(x){
# get M and SD
desc <- DF.surv %>%
filter(!is.na(get(x)),
att.chk == 1) %>%
group_by(vig) %>%
summarise(m.est = mean(get(x)),
sd.est = sd(get(x))
)
# precision sample planning
prec_mean(mean = desc$m.est,
sd = desc$sd.est,
conf.width = 1)$n %>%
mean() %>%
return()
}
)
prec
DF.surv %>%
filter(!is.na(awr)) %>%
group_by(vig) %>%
summarise(n = n()) %>%
summarise(n.min = min(n),
n.max = max(n),
n.mean = mean(n))
32-8
24*12
DF.surv %>%
filter(!is.na(awr),
att.chk == 1) %>%
group_by(vig) %>%
summarise(n = n()) %>%
summarise(n.min = min(n),
n.max = max(n),
n.mean = mean(n))
29 * 12
267 * 3.5
DF.surv %>%
summarise(m = mean(att.chk,
na.rm = T))
348/.8
435 – (.2 * 435)
435 - (.2 * 435)
267 * 4.5
bind_rows(prec) %>% rowMeans() # overall need
24 * 12
288 / .8
267 * 4
