library("tidyverse")
library("readxl")
# Chunk 1: setup and load packages
# load libraries
library("tidyverse")
library("readxl")
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv")
l.DF$sign.dir
l.DF$sign.dir %>% unique
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv") %>%
rowwise() %>%
mutate(es = if_else(condition = sign.dir == "neg",
true = es * -1,
false = es))
l.DF %>% names
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv") %>%
rowwise() %>%
mutate(d = if_else(condition = sign.dir == "neg",
true = d * -1,
false = d))
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv") %>%
select(!is.na(es)) %>%
rowwise() %>%
mutate(d = if_else(condition = sign.dir == "neg",
true = d * -1,
false = d)) %>%
ungroup()
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv") %>%
select(!is.na(d)) %>%
rowwise() %>%
mutate(d = if_else(condition = sign.dir == "neg",
true = d * -1,
false = d)) %>%
ungroup()
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv") %>%
filter(!is.na(d)) %>%
rowwise() %>%
mutate(d = if_else(condition = sign.dir == "neg",
true = d * -1,
false = d)) %>%
ungroup()
l.DF$es.id %>% class()
l.DF$study.id %>% class()
l.DF$d %>% class()
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv") %>%
filter(!is.na(d)) %>%
rowwise() %>%
mutate(d = if_else(condition = sign.dir == "neg",
true = d * -1,
false = d),
study.id = factor(study.id),
es.id = factor(es.id)) %>%
ungroup()
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv") %>%
# remove non-Cohen d observations
filter(!is.na(d),
!is.na(n1))
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv") %>%
# remove observations that aren't Cohen d and don't have n's
filter(!is.na(d),
!is.na(n1)) %>%
rowwise() %>%
# make negative effects negative
mutate(d = if_else(condition = sign.dir == "neg",
true = d * -1,
false = d)) %>%
# calculate var.d
mutate(var.d =
((n.1 + n.2) / (n.1 * n.2)) +
((d^2) / (2 * (n.1 + n.2))))
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv") %>%
# remove observations that aren't Cohen d and don't have n's
filter(!is.na(d),
!is.na(n1)) %>%
rowwise() %>%
# make negative effects negative
mutate(d = if_else(condition = sign.dir == "neg",
true = d * -1,
false = d)) %>%
# calculate var.d
mutate(var.d =
((n1 + n2) / (n1 * n2)) +
((d^2) / (2 * (n1 + n2))))
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv") %>%
# remove observations that aren't Cohen d and don't have n's
filter(!is.na(d),
!is.na(n1)) %>%
rowwise() %>%
# make negative effects negative
mutate(d = if_else(condition = sign.dir == "neg",
true = d * -1,
false = d))
l.DF$n1 %>% class
l.DF$n1 %>% unique
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv") %>%
# remove observations that aren't Cohen d and don't have n's
filter(!is.na(d),
!is.na(n1)) %>%
rowwise() %>%
# clean up variable class
mutate(study.id = factor(study.id),
es.id = factor(es.id),
n1 = as.numeric(n1),
n2 = as.numeric(n2)) %>%
# make negative effects negative
mutate(d = if_else(condition = sign.dir == "neg",
true = d * -1,
false = d))
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv") %>%
# remove observations that aren't Cohen d and don't have n's
filter(!is.na(d),
!is.na(n1)) %>%
rowwise() %>%
# clean up variable class
mutate(study.id = factor(study.id),
es.id = factor(es.id),
n1 = as.numeric(n1),
n2 = as.numeric(n2)) %>%
# make negative effects negative
mutate(d = if_else(condition = sign.dir == "neg",
true = d * -1,
false = d)) %>%
# calculate var.d
mutate(var.d =
((n1 + n2) / (n1 * n2)) +
((d^2) / (2 * (n1 + n2)))) %>%
ungroup()
l.meta <-
rma.mv(yi = d,
V = var.d,
data = .lDF,
random = ~ 1 | study.id / es.id)
library("metafor")
l.meta <-
rma.mv(yi = d,
V = var.d,
data = .lDF,
random = ~ 1 | study.id / es.id)
l.meta <-
rma.mv(yi = d,
V = var.d,
data = l.DF,
random = ~ 1 | study.id / es.id)
View(l.DF)
is.na(study.id)
is.na(l.DF$study.id)
View(l.DF)
l.DF <- read.csv(file = "./play_data/mean_diff_data.csv") %>%
# remove observations that aren't Cohen d and don't have n's
filter(!is.na(d),
!is.na(n1),
!is.na(study.id)) %>%
rowwise() %>%
# clean up variable class
mutate(study.id = factor(study.id),
es.id = factor(es.id),
n1 = as.numeric(n1),
n2 = as.numeric(n2)) %>%
# make negative effects negative
mutate(d = if_else(condition = sign.dir == "neg",
true = d * -1,
false = d)) %>%
# calculate var.d
mutate(var.d =
((n1 + n2) / (n1 * n2)) +
((d^2) / (2 * (n1 + n2)))) %>%
ungroup()
l.meta <-
rma.mv(yi = d,
V = var.d,
data = l.DF,
random = ~ 1 | study.id / es.id)
l.meta
tau <- sqrt(l.meta$sigma2[1] + l.meta$sigma2[2])
l.tau <- sqrt(l.meta$sigma2[1] + l.meta$sigma2[2])
ggplot() +
geom_area(stat = "function",
fun = dnorm,
args = list(mean = l.meta$b,
sd = l.tautau),
alpha = .25)
ggplot() +
geom_area(stat = "function",
fun = dnorm,
args = list(mean = l.meta$b,
sd = l.tau),
alpha = .25)
ggplot() +
geom_area(stat = "function",
fun = dnorm,
args = list(mean = l.meta$b,
sd = l.tau),
fill = "#00998a")
l.meta$b
l.meta$b %>% as.numeric
ggplot(x = c(-2, 2)) +
geom_area(stat = "function",
fun = dnorm,
args = list(mean = l.meta$b %>% as.numeric,
sd = l.tau),
fill = "#00998a")
ggplot(x = c(-2, 2),
aes(x = x)) +
stat_function(fun = dnorm,
args = list(mean = l.meta$b %>% as.numeric,
sd = l.tau))
ggplot(x = c(-2, 2),
aes(x = x)) +
stat_function(fun = dnorm)
ggplot(data.frame(x = c(-2, 2)),
aes(x = x)) +
stat_function(fun = dnorm,
args = list(mean = l.meta$b %>% as.numeric,
sd = l.tau))
DF.es <-
read_csv(file = "data/metaware_data_clean.csv") %>%
# follow data processing
filter(id.study != 18) %>%
mutate(id.study = factor(id.study),
id.es = factor(id.es))
m.meta <-
rma.mv(yi = es,
V = es.var,
data = DF.es,
random = ~ 1 | id.study / id.es)
m.tau <- sqrt(m.meta$sigma2[1] + m.meta$sigma2[2])
ggplot(data.frame(x = c(-2, 2)),
aes(x = x)) +
# social psych dist
stat_function(fun = dnorm,
args = list(mean = l.meta$b %>% as.numeric,
sd = l.tau)) +
# metaware dist
stat_function(fun = dnorm,
args = list(mean = m.meta$b %>% as.numeric,
sd = m.meta))
ggplot(data.frame(x = c(-2, 2)),
aes(x = x)) +
# social psych dist
stat_function(fun = dnorm,
args = list(mean = l.meta$b %>% as.numeric,
sd = l.tau)) +
# metaware dist
stat_function(fun = dnorm,
args = list(mean = m.meta$b %>% as.numeric,
sd = m.tau))
ggplot(data.frame(x = c(-2, 2)),
aes(x = x)) +
# social psych dist
stat_function(fun = dnorm,
args = list(mean = l.meta$b %>% as.numeric,
sd = l.tau),
fill = "black")
ggplot(data.frame(x = c(-2, 2)),
aes(x = x)) +
# social psych dist
stat_function(fun = dnorm,
args = list(mean = l.meta$b %>% as.numeric,
sd = l.tau),
colour = "blue")
ggplot(data.frame(x = c(-2, 2)),
aes(x = x)) +
# social psych dist
stat_function(fun = dnorm,
args = list(mean = l.meta$b %>% as.numeric,
sd = l.tau),
colour = "blue") +
# metaware dist
stat_function(fun = dnorm,
args = list(mean = m.meta$b %>% as.numeric,
sd = m.tau),
colour = "red")
ggplot(data.frame(x = c(-2, 2)),
aes(x = x)) +
# social psych dist
stat_function(fun = dnorm,
args = list(mean = l.meta$b %>% as.numeric,
sd = l.tau),
colour = "blue") +
# metaware dist
stat_function(fun = dnorm,
args = list(mean = m.meta$b %>% as.numeric,
sd = m.tau),
colour = "red") +
labs(x = "Cohen's d",
y = "density")
m.meta
l.meta
View(l.DF)
View(l.DF)
