stop = 9)) %>%
pivot_wider(names_from = var,
values_from = value)
tmp <- DF.v %>%
pivot_longer(cols = everything(),
names_to = c("var", "vignette"),
names_sep = "##") %>%
mutate(var = substr(x = var,
start = 7,
stop = 9))
View(tmp)
# Chunk 1: setup and load packages
# clean environment
rm(list = ls())
# load packages
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# call package function
packages <- c('tidyverse')
ipak(packages)
rm(packages, ipak)
DF <- read_csv(file = "metaware_ratings_test.csv")
View(DF)
DF <- read_csv(file = "metaware_ratings_test.csv") %>%
# remove unnecessary variables
select(-c(StartDate : RecordedDate),
-c(DF$RecipientLastName : UserLanguage),
-contains("Click"),
-contains("Submit"),
-contains("Count"))
DF <- read_csv(file = "metaware_ratings_test.csv") %>%
# remove unnecessary variables
select(-c(StartDate : RecordedDate),
-c(RecipientLastName : UserLanguage),
-contains("Click"),
-contains("Submit"),
-contains("Count"))
View(DF)
import data
DF <- read_csv(file = "metaware_ratings_test.csv") %>%
# remove unnecessary variables
select(-c(StartDate : UserLanguage),
-contains("Click"),
-contains("Submit"),
-contains("Count")) %>%
# remove row containing ImportId
filter(!grepl("ImportId", `1_hyp_awr`))
View(DF)
DF <- read_csv(file = "metaware_ratings_test.csv") %>%
# remove unnecessary variables
select(-c(StartDate : UserLanguage),
-contains("Click"),
-contains("Submit"),
-contains("Count")) %>%
# remove row containing ImportId
filter(!grepl("ImportId", `1_hyp_awr`)) %>%
# assign participant ids
mutate(ss = 1 : nrow(DF))
View(DF)
DF.v <- DF %>%
select(`1_hyp_awr` : `118_hyp_opp`, id) %>%
# extract key from first row
mutate_all(~if_else(condition = grepl("#", .),
true = substr(x = .,
start = 2,
stop = 9),
false = .))
DF.v <- DF %>%
select(`1_hyp_awr` : `118_hyp_opp`, ss) %>%
# extract key from first row
mutate_all(~if_else(condition = grepl("#", .),
true = substr(x = .,
start = 2,
stop = 9),
false = .))
# import data
DF <- read_csv(file = "metaware_ratings_test.csv") %>%
# remove unnecessary variables
select(-c(StartDate : UserLanguage),
-contains("Click"),
-contains("Submit"),
-contains("Count")) %>%
# remove row containing ImportId
filter(!grepl("ImportId", `1_hyp_awr`)) %>%
# assign participant ids
mutate(ss = 1 : nrow(DF),
ss = as.character(ss))
# separate vignettes and move key to variable name
DF.v <- DF %>%
select(`1_hyp_awr` : `118_hyp_opp`, ss) %>%
# extract key from first row
mutate_all(~if_else(condition = grepl("#", .),
true = substr(x = .,
start = 2,
stop = 9),
false = .))
View(DF.v)
colnames(DF.v) <- paste(sep = "##",
colnames(DF.v),
as.character(unlist(DF.v[1, ]))
)
DF.v <- DF.v[-1, ]
View(DF.v)
DF.v <- DF.v %>%
rename("ss" = "ss##11")
DF.v <- DF.v %>%
rename("ss" = "ss##1")
tmp <- DF.v %>%
pivot_longer(cols = contains("##"),
names_to = c("var", "vignette"),
names_sep = "##")
View(tmp)
tmp <- DF.v %>%
pivot_longer(cols = contains("##"),
names_to = c("var", "vignette"),
names_sep = "##") %>%
mutate(var = substr(x = var,
start = 7,
stop = 9))
View(tmp)
?pivot_wider
tmp <- DF.v %>%
pivot_longer(cols = contains("##"),
names_to = c("var", "vignette"),
names_sep = "##") %>%
mutate(var = substr(x = var,
start = 7,
stop = 9)) %>%
pivot_wider(id_cols = ss,
names_from = var,
values_from = value)
View(tmp)
tmp <- DF.v %>%
pivot_longer(cols = contains("##"),
names_to = c("var", "vignette"),
names_sep = "##") %>%
mutate(var = substr(x = var,
start = 7,
stop = 9)) %>%
pivot_wider(names_from = var,
values_from = value)
View(tmp)
View(DF.v)
tmp <- DF.v %>%
pivot_longer(cols = contains("##"),
names_to = c("var", "vignette"),
names_sep = "##")
View(tmp)
tmp <- DF.v %>%
pivot_longer(cols = contains("##"),
names_to = c("var", "vignette"),
names_sep = "##") %>%
mutate(var = substr(x = var,
start = nchar(var) - 3,
stop = nchar(var)))
View(tmp)
tmp <- DF.v %>%
pivot_longer(cols = contains("##"),
names_to = c("var", "vignette"),
names_sep = "##") %>%
mutate(var = substr(x = var,
start = nchar(var) - 2,
stop = nchar(var)))
View(tmp)
tmp <- DF.v %>%
pivot_longer(cols = contains("##"),
names_to = c("var", "vignette"),
names_sep = "##") %>%
mutate(var = substr(x = var,
start = nchar(var) - 2,
stop = nchar(var))) %>%
pivot_wider(names_from = var,
values_from = value)
View(tmp)
tmp <- DF.v %>%
pivot_longer(cols = contains("##"),
names_to = c("var", "vig"),
names_sep = "##") %>%
mutate(var = substr(x = var,
start = nchar(var) - 2,
stop = nchar(var))) %>%
pivot_wider(names_from = var,
values_from = value)
tmp %>% names()
tmp %>%
group_by(vig) %>%
summarise(m.mot = mean(m.mot, na.rm = T),
sd.mot = sd(m.mot, na.rm = T),
m.opp = mean(m.opp, na.rm = T),
sd.opp = sd(m.opp, na.rm = T)
)
tmp %>%
group_by(vig) %>%
summarise(m.mot = mean(mot, na.rm = T),
sd.mot = sd(mot, na.rm = T),
m.opp = mean(opp, na.rm = T),
sd.opp = sd(opp, na.rm = T)
)
warnings()
# import data
DF <- read_csv(file = "metaware_ratings_test.csv") %>%
# remove unnecessary variables
select(-c(StartDate : UserLanguage),
-contains("Click"),
-contains("Submit"),
-contains("Count")) %>%
# remove row containing ImportId
filter(!grepl("ImportId", `1_hyp_awr`)) %>%
# assign participant ids
mutate(ss = 1 : nrow(DF),
ss = as.character(ss)) %>%
# select vignettes columns
select(`1_hyp_awr` : `118_hyp_opp`, ss) %>%
# extract key from first row
mutate_all(~if_else(condition = grepl("#", .),
true = substr(x = .,
start = 2,
stop = 9),
false = .))
# Chunk 1: setup and load packages
# clean environment
rm(list = ls())
# load packages
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# call package function
packages <- c('tidyverse')
ipak(packages)
rm(packages, ipak)
# import data
DF <- read_csv(file = "metaware_ratings_test.csv") %>%
# remove unnecessary variables
select(-c(StartDate : UserLanguage),
-contains("Click"),
-contains("Submit"),
-contains("Count")) %>%
# remove row containing ImportId
filter(!grepl("ImportId", `1_hyp_awr`)) %>%
# assign participant ids
mutate(ss = 1 : nrow(DF),
ss = as.character(ss)) %>%
# select vignettes columns
select(`1_hyp_awr` : `118_hyp_opp`, ss) %>%
# extract key from first row
mutate_all(~if_else(condition = grepl("#", .),
true = substr(x = .,
start = 2,
stop = 9),
false = .))
colnames(DF) <- paste(sep = "##",
colnames(DF),
as.character(unlist(DF[1, ]))
)
DF <- DF[-1, ]
# import data
DF <- read_csv(file = "metaware_ratings_test.csv") %>%
# remove unnecessary variables
select(-c(StartDate : UserLanguage),
-contains("Click"),
-contains("Submit"),
-contains("Count")) %>%
# remove row containing ImportId
filter(!grepl("ImportId", `1_hyp_awr`)) %>%
# assign participant ids
mutate(ss = 1 : nrow(DF),
ss = as.character(ss)) %>%
# select vignettes columns
select(`1_hyp_awr` : `118_hyp_opp`, ss) %>%
# extract key from first row
mutate_all(~if_else(condition = grepl("#", .),
true = substr(x = .,
start = 2,
stop = 9),
false = .))
# append first row to column name
colnames(DF) <- paste(sep = "##",
colnames(DF),
as.character(unlist(DF[1, ]))
)
DF <- DF[-1, ]
# import data
DF <- read_csv(file = "metaware_ratings_test.csv") %>%
# remove unnecessary variables
select(-c(StartDate : UserLanguage),
-contains("Click"),
-contains("Submit"),
-contains("Count")) %>%
# remove row containing ImportId
filter(!grepl("ImportId", `1_hyp_awr`)) %>%
# assign participant ids
mutate(ss = 1 : nrow(DF),
ss = as.character(ss)) %>%
# select vignettes columns
select(`1_hyp_awr` : `118_hyp_opp`, ss) %>%
# extract key from first row
mutate_all(~if_else(condition = grepl("#", .),
true = substr(x = .,
start = 2,
stop = 9),
false = .))
DF <- read_csv(file = "metaware_ratings_test.csv") %>%
# remove unnecessary variables
select(-c(StartDate : UserLanguage),
-contains("Click"),
-contains("Submit"),
-contains("Count")) %>%
# remove row containing ImportId
filter(!grepl("ImportId", `1_hyp_awr`)) %>%
# assign participant ids
mutate(ss = 1 : nrow(.),
ss = as.character(ss)) %>%
# select vignettes columns
select(`1_hyp_awr` : `118_hyp_opp`, ss) %>%
# extract key from first row
mutate_all(~if_else(condition = grepl("#", .),
true = substr(x = .,
start = 2,
stop = 9),
false = .))
colnames(DF) <- paste(sep = "##",
colnames(DF),
as.character(unlist(DF[1, ]))
)
DF <- DF[-1, ]
DF.v <- DF.v %>%
rename("ss" = "ss##1")
DF <- DF %>%
# pivot longer
pivot_longer(cols = contains("##"),
names_to = c("var", "vig"),
names_sep = "##") %>%
# extract variable name
mutate(var = substr(x = var,
start = nchar(var) - 2,
stop = nchar(var))) %>%
# pivot wider
pivot_wider(names_from = var,
values_from = value)
View(DF)
DF <- read_csv(file = "metaware_ratings_test.csv") %>%
# remove unnecessary variables
select(-c(StartDate : UserLanguage),
-contains("Click"),
-contains("Submit"),
-contains("Count")) %>%
# remove row containing ImportId
filter(!grepl("ImportId", `1_hyp_awr`)) %>%
# assign participant ids
mutate(ss = 1 : nrow(.),
ss = as.character(ss)) %>%
# select vignettes columns
select(`1_hyp_awr` : `118_hyp_opp`, ss) %>%
# extract key from first row
mutate_all(~if_else(condition = grepl("#", .),
true = substr(x = .,
start = 2,
stop = 9),
false = .))
# append first row to column name
## append name
colnames(DF) <- paste(sep = "##",
colnames(DF),
as.character(unlist(DF[1, ]))
)
## remove first row
DF <- DF[-1, ]
## fix ss variable naming
DF <- DF %>%
rename("ss" = "ss##1")
DF2 <- DF %>%
# pivot longer
pivot_longer(cols = contains("##"),
names_to = c("var", "vig"),
names_sep = "##") %>%
# extract variable name
mutate(var = substr(x = var,
start = nchar(var) - 2,
stop = nchar(var)))
View(DF2)
DF2 <- DF %>%
# pivot longer
pivot_longer(cols = contains("##"),
names_to = c("var", "vig"),
names_sep = "##") %>%
# extract variable name
mutate(var = substr(x = var,
start = nchar(var) - 2,
stop = nchar(var))) %>%
# pivot wider
pivot_wider(names_from = var,
values_from = value)
View(DF2)
# import data
DF <- read_csv(file = "metaware_ratings_test.csv") %>%
# remove unnecessary variables
select(-c(StartDate : UserLanguage),
-contains("Click"),
-contains("Submit"),
-contains("Count")) %>%
# remove row containing ImportId
filter(!grepl("ImportId", `1_hyp_awr`)) %>%
# assign participant ids
mutate(ss = 1 : nrow(.),
ss = as.character(ss)) %>%
# select vignettes columns
select(`1_hyp_awr` : `118_hyp_opp`, ss) %>%
# extract key from first row
mutate_all(~if_else(condition = grepl("#", .),
true = substr(x = .,
start = 2,
stop = 9),
false = .))
# append first row to column name
## append name
colnames(DF) <- paste(sep = "##",
colnames(DF),
as.character(unlist(DF[1, ]))
)
## remove first row
DF <- DF[-1, ]
## fix ss variable naming
DF <- DF %>%
rename("ss" = "ss##1")
# prep dataframe for summary statistics calculation
DF <- DF %>%
# pivot longer
pivot_longer(cols = contains("##"),
names_to = c("var", "vig"),
names_sep = "##") %>%
# extract variable name
mutate(var = substr(x = var,
start = nchar(var) - 2,
stop = nchar(var))) %>%
# pivot wider
pivot_wider(names_from = var,
values_from = value)
rm(DF2)
View(DF)
?mutate_at
# import data
DF <- read_csv(file = "metaware_ratings_test.csv") %>%
# remove unnecessary variables
select(-c(StartDate : UserLanguage),
-contains("Click"),
-contains("Submit"),
-contains("Count")) %>%
# remove row containing ImportId
filter(!grepl("ImportId", `1_hyp_awr`)) %>%
# assign participant ids
mutate(ss = 1 : nrow(.),
ss = as.character(ss)) %>%
# select vignettes columns
select(`1_hyp_awr` : `118_hyp_opp`, ss) %>%
# extract key from first row
mutate_all(~if_else(condition = grepl("#", .),
true = substr(x = .,
start = 2,
stop = 9),
false = .))
# append first row to column name
## append name
colnames(DF) <- paste(sep = "##",
colnames(DF),
as.character(unlist(DF[1, ]))
)
## remove first row
DF <- DF[-1, ]
## fix ss variable naming
DF <- DF %>%
rename("ss" = "ss##1")
# prep dataframe for summary statistics calculation
DF <- DF %>%
# pivot longer
pivot_longer(cols = contains("##"),
names_to = c("var", "vig"),
names_sep = "##") %>%
# extract variable name
mutate(var = substr(x = var,
start = nchar(var) - 2,
stop = nchar(var))) %>%
# pivot wider
pivot_wider(names_from = var,
values_from = value) %>%
# convert columns to collect class
mutate_at(c("awr", "mot", "opp"),
as.numeric)
# 2, 4, 1
View(DF)
DF %>%
group_by(vig) %>%
summarise(m.mot = mean(mot, na.rm = T),
sd.mot = sd(mot, na.rm = T),
m.opp = mean(opp, na.rm = T),
sd.opp = sd(opp, na.rm = T)
)
DF %>%
group_by(vig) %>%
summarise(m.mot = mean(mot, na.rm = T),
sd.mot = sd(mot, na.rm = T),
m.opp = mean(opp, na.rm = T),
sd.opp = sd(opp, na.rm = T)
) %>%
write.csv("vig.ratings.csv",
row.names = F)
