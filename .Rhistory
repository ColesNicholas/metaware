select(title)
s
s <- DF %>%
filter(NC_include == 1) %>%
select(title) %>%
arrange(title)
s <- DF %>%
filter(NC_include == 1) %>%
select(title) %>%
arrange(title)
c <- D2F %>%
select(name) %>%
arrange(name)
c <- D2F %>%
unique(name)
c <- D2F$name %>%
unique()
c
s <- DF %>%
filter(NC_include == 1) %>%
select(title) %>%
arrange(title) %>%
as.vector()
View(s)
s <- DF %>%
filter(NC_include == 1) %>%
select(title) %>%
arrange(title)
s
cbind(s,c)
merge(s, c)
s.c <- merge(s, c)
View(s.c)
rm(s.c)
View(s)
View(c)
c
c %>% View()
c %>% as.data.frame %>% View()
c <- D2F$name %>%
as.data.frame
c
c %>% View()
c <- D2F$name %>%
as.data.frame %>%
arrange(.)
c %>% View()
DF <- read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "records.screening",
na = c("N/A"))
# check that the include numbers are correct
DF$MW_include %>%
unique()
DF$MW_rationale %>%
unique()
DF$NC_include %>%
unique()
DF$NC_rationale %>%
unique()
# check that NC didn't miss anything
tmp <- DF %>%
filter(MW_include == 1)
tmp %>%
group_by(NC_include) %>%
summarise(n = n())
# check that the number of records that NC said would be include actually matches how many were in there
DF %>%
filter(NC_include == 1) %>%
nrow()
D2F <- read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "coding",
na = c("N/A"))
D2F$name %>% unique %>% length
c <- D2F %>%
select(name)
arrange(name)
D2F$name
c <- D2F %>%
select(name)
c %>% View()
c <- D2F %>%
select(name) %>%
arrange(name)
s %>% View()
c %>% View()
c <- D2F %>%
select(name) %>%
distinct(name) %>%
arrange(name)
c %>% View
DF <- read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "records.screening",
na = c("N/A"))
library(read_xlsx)
#----------------------------------------------
# load libraries
library("tidyverse")
library("readxl")
#----------------------------------------------
# load libraries
library("tidyverse")
library("readxl")
#----------------------------------------------
# load screening data
DF.screen <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "records.screening",
na = c("N/A"))
# load coding data
DF.code <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "coding",
na = c("N/A"))
DF$MW_include %>%
unique()
DF.screen$MW_include %>%
unique()
DF$MW_rationale %>%
unique()
DF.screen$MW_include %>%
unique()
DF.screen$MW_rationale %>%
unique()
DF.screen$NC_include %>%
unique()
DF.screen$NC_rationale %>%
unique()
DF.screen %>%
filter(MW_include == 1) %>%
group_by(NC_include) %>%
summarise(n = n())
table(DF.screen$MW_include,
DF.screen$NC_include)
?table
s <- DF.screen %>%
filter(NC_include == 1) %>%
nrow()
c <- DF.code$name %>%
unique %>%
length()
#----------------------------------------------
# load libraries
library("tidyverse")
library("readxl")
#----------------------------------------------
# load screening data
DF.screen <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "records.screening",
na = c("N/A"))
# load coding data
DF.code <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "coding",
na = c("N/A"))
#----------------------------------------------
# check that coding categories are correct
DF.screen$MW_include %>%
unique()
DF.screen$MW_rationale %>%
unique()
DF.screen$NC_include %>%
unique()
DF.screen$NC_rationale %>%
unique()
#----------------------------------------------
# check that NC didn't miss any records that MW said were eligible
DF.screen %>%
filter(MW_include == 1) %>%
group_by(NC_include) %>%
summarise(n = n())
# examine MW and NC cross-tabs (there should be a handful of double-coded records)
table(DF.screen$MW_include,
DF.screen$NC_include)
# check that the number of records that NC said would be include actually matches how many were in there
DF %>%
filter(NC_include == 1) %>%
nrow()
#----------------------------------------------
# load libraries
library("tidyverse")
library("readxl")
#----------------------------------------------
# load screening data
DF.screen <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "records.screening",
na = c("N/A"))
# load coding data
DF.code <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "coding",
na = c("N/A"))
#----------------------------------------------
# check that coding categories are correct
DF.screen$MW_include %>%
unique()
DF.screen$MW_rationale %>%
unique()
DF.screen$NC_include %>%
unique()
DF.screen$NC_rationale %>%
unique()
#----------------------------------------------
# check that NC didn't miss any records that MW said were eligible
DF.screen %>%
filter(MW_include == 1) %>%
group_by(NC_include) %>%
summarise(n = n())
# examine MW and NC cross-tabs (there should be a handful of double-coded records)
table(DF.screen$MW_include,
DF.screen$NC_include)
# check that the number of records that NC said would be include actually matches how many were in there
DF %>%
filter(NC_include == 1) %>%
nrow()
rm(list = ls())
#----------------------------------------------
# load libraries
library("tidyverse")
library("readxl")
#----------------------------------------------
# load screening data
DF.screen <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "records.screening",
na = c("N/A"))
# load coding data
DF.code <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "coding",
na = c("N/A"))
#----------------------------------------------
# check that coding categories are correct
DF.screen$MW_include %>%
unique()
DF.screen$MW_rationale %>%
unique()
DF.screen$NC_include %>%
unique()
DF.screen$NC_rationale %>%
unique()
#----------------------------------------------
# check that NC didn't miss any records that MW said were eligible
DF.screen %>%
filter(MW_include == 1) %>%
group_by(NC_include) %>%
summarise(n = n())
# examine MW and NC cross-tabs (there should be a handful of double-coded records)
table(DF.screen$MW_include,
DF.screen$NC_include)
# check that the number of records that NC said would be include actually matches how many were in there
# DF %>%
#   filter(NC_include == 1) %>%
#   nrow()
#----------------------------------------------
# check that number of eligible articles = number of included articles
s <- DF.screen %>%
filter(NC_include == 1) %>%
nrow()
c <- DF.code$name %>%
unique %>%
length()
s == c
rm(s, c)
#----------------------------------------------
# load libraries
library("tidyverse")
library("readxl")
#----------------------------------------------
# load screening data
DF.screen <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "records.screening",
na = c("N/A"))
# load coding data
DF.code <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "coding",
na = c("N/A"))
DF.screen %>%
names
DF.screen$database %>% unique
DF.screen %>%
group_by(database) %>%
summarise(n = n())
850+6+572+29
DF.screen %>%
nrow()
DF.code$name %>%
unique %>%
length()
DF.code$name %>%
unique %>%
length() - nrow(DF.screen)
table(DF.screen$MW_include,
DF.screen$NC_include)
DF.screen %>%
filter(MW_include == 0 |
NC_include == 0)
DF.screen %>%
filter(MW_include == 0 |
NC_include == 0) %>%
nrow()
DF.screen$database %>% unique()
table(DF.screen$MW_rationale, DF.screen$NC_rationale)
DF.screen <- DF.screen %>%
mutate(exclusion.final =
if_else(condition = !is.na(NC_rationale),
true = NC_rationale,
false = MC_rationale))
DF.screen <- DF.screen %>%
mutate(exclusion.final =
if_else(condition = !is.na(NC_rationale),
true = NC_rationale,
false = MW_rationale))
DF.screen <- DF.screen %>%
mutate(exclusion.final =
if_else(condition = !is.na(NC_rationale),
true = NC_rationale,
false = MW_rationale))
DF %>%
filter(NC_rationale,
MW_rationale,
exclusion.final) %>% View()
DF.screen %>%
filter(NC_rationale,
MW_rationale,
exclusion.final) %>% View()
DF.screen %>%
select(NC_rationale,
MW_rationale,
exclusion.final) %>% View()
DF.screen %>%
select(is.na(MW_rationale),
is.na(NC_rationale)) %>%
View()
DF.screen %>%
filter(is.na(MW_rationale),
is.na(NC_rationale)) %>%
View()
DF.screen %>%
filter(MW_include == 0 |
NC_include == 0) %>%
group_by(exclusion.final) %>%
summarise(n = n())
#----------------------------------------------
# load libraries
library("tidyverse")
library("readxl")
#----------------------------------------------
# load screening data
DF.screen <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "records.screening",
na = c("N/A"))
# load coding data
DF.code <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "coding",
na = c("N/A"))
#----------------------------------------------
# estimate # of records per search
DF.screen %>%
group_by(database) %>%
summarise(n = n())
#----------------------------------------------
# total number of records assessed
DF.screen %>%
nrow()
#----------------------------------------------
# total number of records excluded
DF.screen %>%
filter(MW_include == 0 |
NC_include == 0) %>%
nrow()
#----------------------------------------------
# reasons for exclusions
# sometimes the final decision is in MW's column (e.g., if he decided it was not eligible)
# other times it is in NC's column (e.g., if MW asked NC to look at the record)
DF.screen %>%
# identify final exclusion reason
mutate(exclusion.final =
if_else(condition = !is.na(NC_rationale),
true = NC_rationale,
false = MW_rationale)) %>%
# select excluded records
filter(MW_include == 0 |
NC_include == 0) %>%
# summarise
group_by(exclusion.final) %>%
summarise(n = n())
DF.screen %>%
# identify final exclusion reason
mutate(exclusion.final =
if_else(condition = !is.na(NC_rationale),
true = NC_rationale,
false = MW_rationale)) %>%
filter(exclusion.final == 5) %>%
View()
DF.screen$database
DF.screen %>%
# identify final exclusion reason
mutate(exclusion.final =
if_else(condition = !is.na(NC_rationale),
true = NC_rationale,
false = MW_rationale)) %>%
# select excluded records
filter(MW_include == 0 |
NC_include == 0) %>%
# summarise
group_by(database, exclusion.final) %>%
summarise(n = n())
DF.screen %>%
# identify final exclusion reason
mutate(exclusion.final =
if_else(condition = !is.na(NC_rationale),
true = NC_rationale,
false = MW_rationale)) %>%
# select excluded records
filter(MW_include == 0 |
NC_include == 0) %>%
# summarise
group_by(database, exclusion.final) %>%
summarise(n = n()) %>% View()
DF.screen %>%
# identify final exclusion reason
mutate(exclusion.final =
if_else(condition = !is.na(NC_rationale),
true = NC_rationale,
false = MW_rationale)) %>%
# select excluded records
filter(MW_include == 0 |
NC_include == 0,
database = "Search 1: APA PsycInfo (2022)") %>%
View()
DF.screen %>%
# identify final exclusion reason
mutate(exclusion.final =
if_else(condition = !is.na(NC_rationale),
true = NC_rationale,
false = MW_rationale)) %>%
# select excluded records
filter(MW_include == 0 |
NC_include == 0,
database == "Search 1: APA PsycInfo (2022)") %>%
View()
DF.screen %>%
# identify final exclusion reason
mutate(exclusion.final =
if_else(condition = !is.na(NC_rationale),
true = NC_rationale,
false = MW_rationale)) %>%
# select excluded records
filter(MW_include == 0 |
NC_include == 0,
database == "Search 1: APA PsycInfo (2022)",
exclusion.final == 6) %>%
View()
DF.screen %>%
group_by(database) %>%
summarise(n = n())
#----------------------------------------------
# load libraries
library("tidyverse")
library("readxl")
#----------------------------------------------
# load screening data
DF.screen <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "records.screening",
na = c("N/A"))
# load coding data
DF.code <-
read_xlsx(path = "data/metaware_EsData_raw.xlsx",
sheet = "coding",
na = c("N/A"))
#----------------------------------------------
# estimate # of records per search
DF.screen %>%
group_by(database) %>%
summarise(n = n())
DF.screen %>%
nrow()
DF.screen %>%
filter(MW_include == 0 |
NC_include == 0) %>%
nrow()
1457-1418
DF.code$name %>%
unique %>%
length()
DF.screen %>%
# identify final exclusion reason
mutate(exclusion.final =
if_else(condition = !is.na(NC_rationale),
true = NC_rationale,
false = MW_rationale)) %>%
# select excluded records
filter(MW_include == 0 |
NC_include == 0) %>%
# summarise
group_by(exclusion.final) %>%
summarise(n = n())
DF.code$name %>%
unique %>%
length()
DF.code$id %>%
unique %>%
length()
DF.code %>%
nrow
