read.delim(file = paste0("./vignettes/", f),
col.names = "V1",
encoding = "UTF-8") %>%
# identify hypotheses using the ~ identifier
filter(grepl("~", V1)) %>%
# separate hypothesis from key
separate(V1,
into = c("name", "hypothesis"),
sep = 7)
# append results to h.DF
h.DF <<- rbind(h.DF, h)
}
rm(f, f.list, h)
# Chunk 7
# prep h.DF for merge
h.DF <- h.DF %>%
mutate(id = substr(x = name,
start = 2,
stop = 3),
dir = substr(x = name,
start = 5,
stop = 5)) %>%
select(-name) %>%
pivot_wider(names_from = dir,
values_from = hypothesis)
# prep v.DF for merge
v.DF <- v.DF %>%
mutate(id = substr(x = name,
start = 2,
stop = 3))
# merge
DF <- full_join(v.DF, h.DF,
by = "id") %>%
select(-id)
# Chunk 8
write.csv(DF, 'metaware.vig.csv',
row.names = F)
rm(h.DF, v.DF)
DF
DF %>% names
DF %>% names()
library(tidyverse)
DF %>% names
DF.12 <- DF %>%
filter(name == "12_p_hap" | name == "12_z_hap")
View(DF.12)
View(DF)
DF.12 <- DF %>%
filter(name == "#12_p_hap" | name == "#12_z_hap")
View(DF.12)
temp <- DF %>% filter(grepl("#12", name))
View(temp)
View(DF.12)
write.csv(DF.12, 'metaware.vig12.csv',
row.names = F)
# Chunk 1: setup and load packages
# clean environment
rm(list = ls())
# load packages
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# call package function
packages <- c('tidyverse')
ipak(packages)
rm(packages, ipak)
# Chunk 2
f.list <- list.files(path = "./vignettes",
pattern = ".txt")
# Chunk 3
v.DF <- data.frame()
# Chunk 4
for (f in f.list){
# open and process vignette file
v <-
# open data
read.delim(file = paste0("./vignettes/", f),
col.names = "V1",
encoding = "UTF-8") %>%
# remove non-vignette rows
slice(
# start at row after Vignette
(which(. == "Vignette") + 1) :
# stop at end of dataframe
nrow(.)
) %>%
# identify vignette number
mutate(V1 = if_else(grepl("#", .$V1),
substr(V1, 1, 9),
V1)
) %>%
# split at every new vignette
split(cumsum(grepl("#", .$V1))
) %>%
# create separate column for each vignette
map(c) %>%
bind_cols() %>%
# move first row to column names
set_names(as.character(slice(., 1))) %>%
slice(-1) %>%
# add sentence number column
mutate(sent = seq.int(nrow(.))) %>%
# pivot long
pivot_longer(cols = -sent) %>%
# estimate reading time in milliseconds (200 words per minute)
mutate(
# estimate # of words
word.num = str_count(value, "\\w+"),
# estimate reading time
rt = (word.num / 400) * 60 * 1000 # MW, you can adjust the 200
) %>%
select(-word.num) %>%
# pivot wider
pivot_wider(names_from = sent,
values_from = c(value, rt))
# append results to v.DF
v.DF <<- rbind(v.DF, v)
}
rm(f, v)
# Chunk 5
h.DF <- data.frame()
# Chunk 6
for (f in f.list){
h <-
# open data
read.delim(file = paste0("./vignettes/", f),
col.names = "V1",
encoding = "UTF-8") %>%
# identify hypotheses using the ~ identifier
filter(grepl("~", V1)) %>%
# separate hypothesis from key
separate(V1,
into = c("name", "hypothesis"),
sep = 7)
# append results to h.DF
h.DF <<- rbind(h.DF, h)
}
rm(f, f.list, h)
# Chunk 7
# prep h.DF for merge
h.DF <- h.DF %>%
mutate(id = substr(x = name,
start = 2,
stop = 3),
dir = substr(x = name,
start = 5,
stop = 5)) %>%
select(-name) %>%
pivot_wider(names_from = dir,
values_from = hypothesis)
# prep v.DF for merge
v.DF <- v.DF %>%
mutate(id = substr(x = name,
start = 2,
stop = 3))
# merge
DF <- full_join(v.DF, h.DF,
by = "id") %>%
select(-id)
rm(h.DF, v.DF)
# Chunk 8
DF.12 <- DF %>%
filter(name == "#12_p_hap" | name == "#12_z_hap")
# Chunk 9
write.csv(DF, 'metaware.vig.csv',
row.names = F)
write.csv(DF.12, 'metaware.vig12.csv',
row.names = F)
# Chunk 1: setup and load packages
# clean environment
rm(list = ls())
# load packages
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# call package function
packages <- c('tidyverse')
ipak(packages)
rm(packages, ipak)
# Chunk 2
f.list <- list.files(path = "./vignettes",
pattern = ".txt")
# Chunk 3
v.DF <- data.frame()
# Chunk 4
for (f in f.list){
# open and process vignette file
v <-
# open data
read.delim(file = paste0("./vignettes/", f),
col.names = "V1",
encoding = "UTF-8") %>%
# remove non-vignette rows
slice(
# start at row after Vignette
(which(. == "Vignette") + 1) :
# stop at end of dataframe
nrow(.)
) %>%
# identify vignette number
mutate(V1 = if_else(grepl("#", .$V1),
substr(V1, 1, 9),
V1)
) %>%
# split at every new vignette
split(cumsum(grepl("#", .$V1))
) %>%
# create separate column for each vignette
map(c) %>%
bind_cols() %>%
# move first row to column names
set_names(as.character(slice(., 1))) %>%
slice(-1) %>%
# add sentence number column
mutate(sent = seq.int(nrow(.))) %>%
# pivot long
pivot_longer(cols = -sent) %>%
# estimate reading time in milliseconds (200 words per minute)
mutate(
# estimate # of words
word.num = str_count(value, "\\w+"),
# estimate reading time
rt = (word.num / 400) * 60 * 1000 # MW, you can adjust the 200
) %>%
select(-word.num) %>%
# pivot wider
pivot_wider(names_from = sent,
values_from = c(value, rt))
# append results to v.DF
v.DF <<- rbind(v.DF, v)
}
rm(f, v)
# Chunk 5
h.DF <- data.frame()
# Chunk 6
for (f in f.list){
h <-
# open data
read.delim(file = paste0("./vignettes/", f),
col.names = "V1",
encoding = "UTF-8") %>%
# identify hypotheses using the ~ identifier
filter(grepl("~", V1)) %>%
# separate hypothesis from key
separate(V1,
into = c("name", "hypothesis"),
sep = 7)
# append results to h.DF
h.DF <<- rbind(h.DF, h)
}
rm(f, f.list, h)
# Chunk 7
# prep h.DF for merge
h.DF <- h.DF %>%
mutate(id = substr(x = name,
start = 2,
stop = 3),
dir = substr(x = name,
start = 5,
stop = 5)) %>%
select(-name) %>%
pivot_wider(names_from = dir,
values_from = hypothesis)
# prep v.DF for merge
v.DF <- v.DF %>%
mutate(id = substr(x = name,
start = 2,
stop = 3))
# merge
DF <- full_join(v.DF, h.DF,
by = "id") %>%
select(-id)
rm(h.DF, v.DF)
# Chunk 8
DF.12 <- DF %>%
filter(name == "#12_p_hap" | name == "#12_z_hap")
# Chunk 9
write.csv(DF, 'metaware.vig.csv',
row.names = F)
write.csv(DF.12, 'metaware.vig12.csv',
row.names = F)
write.csv(DF.12, 'metaware.vig12.csv',
row.names = F)
getwd()
# Chunk 1: setup and load packages
# clean environment
rm(list = ls())
# load packages
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# call package function
packages <- c('tidyverse')
ipak(packages)
rm(packages, ipak)
# Chunk 2
f.list <- list.files(path = "./vignettes",
pattern = ".txt")
# Chunk 3
v.DF <- data.frame()
# Chunk 4
for (f in f.list){
# open and process vignette file
v <-
# open data
read.delim(file = paste0("./vignettes/", f),
col.names = "V1",
encoding = "UTF-8") %>%
# remove non-vignette rows
slice(
# start at row after Vignette
(which(. == "Vignette") + 1) :
# stop at end of dataframe
nrow(.)
) %>%
# identify vignette number
mutate(V1 = if_else(grepl("#", .$V1),
substr(V1, 1, 9),
V1)
) %>%
# split at every new vignette
split(cumsum(grepl("#", .$V1))
) %>%
# create separate column for each vignette
map(c) %>%
bind_cols() %>%
# move first row to column names
set_names(as.character(slice(., 1))) %>%
slice(-1) %>%
# add sentence number column
mutate(sent = seq.int(nrow(.))) %>%
# pivot long
pivot_longer(cols = -sent) %>%
# estimate reading time in milliseconds (200 words per minute)
mutate(
# estimate # of words
word.num = str_count(value, "\\w+"),
# estimate reading time
rt = (word.num / 400) * 60 * 1000 # MW, you can adjust the 200
) %>%
select(-word.num) %>%
# pivot wider
pivot_wider(names_from = sent,
values_from = c(value, rt))
# append results to v.DF
v.DF <<- rbind(v.DF, v)
}
rm(f, v)
# Chunk 5
h.DF <- data.frame()
# Chunk 6
for (f in f.list){
h <-
# open data
read.delim(file = paste0("./vignettes/", f),
col.names = "V1",
encoding = "UTF-8") %>%
# identify hypotheses using the ~ identifier
filter(grepl("~", V1)) %>%
# separate hypothesis from key
separate(V1,
into = c("name", "hypothesis"),
sep = 7)
# append results to h.DF
h.DF <<- rbind(h.DF, h)
}
rm(f, f.list, h)
# Chunk 7
# prep h.DF for merge
h.DF <- h.DF %>%
mutate(id = substr(x = name,
start = 2,
stop = 3),
dir = substr(x = name,
start = 5,
stop = 5)) %>%
select(-name) %>%
pivot_wider(names_from = dir,
values_from = hypothesis)
# prep v.DF for merge
v.DF <- v.DF %>%
mutate(id = substr(x = name,
start = 2,
stop = 3))
# merge
DF <- full_join(v.DF, h.DF,
by = "id") %>%
select(-id)
rm(h.DF, v.DF)
# Chunk 9
write.csv(DF, 'metaware.vig.csv',
row.names = F)
# Chunk 1: setup and load packages
# clean environment
rm(list = ls())
# load packages
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# call package function
packages <- c('tidyverse')
ipak(packages)
rm(packages, ipak)
# Chunk 2
f.list <- list.files(path = "./vignettes",
pattern = ".txt")
# Chunk 3
v.DF <- data.frame()
# Chunk 4
for (f in f.list){
# open and process vignette file
v <-
# open data
read.delim(file = paste0("./vignettes/", f),
col.names = "V1",
encoding = "UTF-8") %>%
# remove non-vignette rows
slice(
# start at row after Vignette
(which(. == "Vignette") + 1) :
# stop at end of dataframe
nrow(.)
) %>%
# identify vignette number
mutate(V1 = if_else(grepl("#", .$V1),
substr(V1, 1, 9),
V1)
) %>%
# split at every new vignette
split(cumsum(grepl("#", .$V1))
) %>%
# create separate column for each vignette
map(c) %>%
bind_cols() %>%
# move first row to column names
set_names(as.character(slice(., 1))) %>%
slice(-1) %>%
# add sentence number column
mutate(sent = seq.int(nrow(.))) %>%
# pivot long
pivot_longer(cols = -sent) %>%
# estimate reading time in milliseconds (200 words per minute)
mutate(
# estimate # of words
word.num = str_count(value, "\\w+"),
# estimate reading time
rt = (word.num / 400) * 60 * 1000 # MW, you can adjust the 200
) %>%
select(-word.num) %>%
# pivot wider
pivot_wider(names_from = sent,
values_from = c(value, rt))
# append results to v.DF
v.DF <<- rbind(v.DF, v)
}
rm(f, v)
# Chunk 5
h.DF <- data.frame()
# Chunk 6
for (f in f.list){
h <-
# open data
read.delim(file = paste0("./vignettes/", f),
col.names = "V1",
encoding = "UTF-8") %>%
# identify hypotheses using the ~ identifier
filter(grepl("~", V1)) %>%
# separate hypothesis from key
separate(V1,
into = c("name", "hypothesis"),
sep = 7)
# append results to h.DF
h.DF <<- rbind(h.DF, h)
}
rm(f, f.list, h)
# Chunk 7
# prep h.DF for merge
h.DF <- h.DF %>%
mutate(id = substr(x = name,
start = 2,
stop = 3),
dir = substr(x = name,
start = 5,
stop = 5)) %>%
select(-name) %>%
pivot_wider(names_from = dir,
values_from = hypothesis)
# prep v.DF for merge
v.DF <- v.DF %>%
mutate(id = substr(x = name,
start = 2,
stop = 3))
# merge
DF <- full_join(v.DF, h.DF,
by = "id") %>%
select(-id)
rm(h.DF, v.DF)
# Chunk 9
write.csv(DF, 'metaware.vig.csv',
row.names = F)
